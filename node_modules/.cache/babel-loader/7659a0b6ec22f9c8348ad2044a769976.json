{"ast":null,"code":"var _jsxFileName = \"/home/christian/Desktop/Projects/website/src/components/Pages/Contact.js\";\nimport React, { Component } from 'react';\nimport Field from '../common/Field';\nimport { validateYupSchema, withFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst fields = {\n  sections: [[{\n    name: 'name',\n    elementName: 'input',\n    type: 'text',\n    id: 'name',\n    placeholder: 'Your name*'\n  }, {\n    name: 'email',\n    elementName: 'input',\n    type: 'email',\n    id: 'name',\n    placeholder: 'Your email*'\n  }, {\n    name: 'phone',\n    elementName: 'input',\n    type: 'text',\n    id: 'name',\n    placeholder: 'Your phone number*'\n  }], [{\n    name: 'message',\n    elementName: 'textarea',\n    type: 'text',\n    id: 'name',\n    placeholder: 'Type your message*'\n  }]]\n};\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.submitForm = e => {\n      alert(\"Form Submitted. Thank you very much!\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"page-section\",\n      id: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-heading text-uppercase\",\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-subheading text-muted\",\n            children: \"Lorem ipsum dolor sit amet consectetur.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row>\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => this.submitForm(e),\n              id: \"contactForm\",\n              \"data-sb-form-api-token\": \"API_TOKEN\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row align-items-stretch mb-5\",\n                children: [fields.sections.map((section, sectionIndex) => {\n                  console.log(\"Rendering section \", sectionIndex, \" with \", section);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: section.map((field, i) => {\n                      return /*#__PURE__*/_createElement(Field, { ...field,\n                        key: i,\n                        value: this.state[field.name],\n                        onChange: e => this.setState({\n                          [field.name]: e.target.value\n                        }),\n                        __self: this,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 40,\n                          columnNumber: 60\n                        }\n                      });\n                    })\n                  }, sectionIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 45\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"clearfix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-lg-12 text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"sendMessageButton\",\n                    className: \"btn btn-primary btn-xl text-uppercase\",\n                    type: \"submit\",\n                    children: \"Send Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n  }),\n  validate: values => {\n    const errors = {};\n    Object.keys(values).map(v => {\n      if (!values[v]) {\n        errors[v] = 'Required';\n      }\n    });\n    return errors;\n  },\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    alert(\"You've Submitted the form\");\n  }\n})(Contact);","map":{"version":3,"sources":["/home/christian/Desktop/Projects/website/src/components/Pages/Contact.js"],"names":["React","Component","Field","validateYupSchema","withFormik","fields","sections","name","elementName","type","id","placeholder","Contact","submitForm","e","alert","render","map","section","sectionIndex","console","log","field","i","state","setState","target","value","mapPropsToValues","email","phone","message","validate","values","errors","Object","keys","v","handleSubmit","setSubmitting"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Field from '../common/Field'\nimport { validateYupSchema, withFormik } from 'formik';\n\nconst fields = {\n    sections: [\n        [    \n            {name: 'name', elementName: 'input', type: 'text', id: 'name', placeholder: 'Your name*' },\n            {name: 'email', elementName: 'input', type: 'email', id: 'name', placeholder: 'Your email*' },\n            {name: 'phone', elementName: 'input', type: 'text', id: 'name', placeholder: 'Your phone number*' },\n        ],\n        [\n            {name: 'message', elementName: 'textarea', type: 'text', id: 'name', placeholder: 'Type your message*' }\n        ]\n    ]\n}\nclass Contact extends Component {\n    \n    submitForm = (e) => {\n        alert(\"Form Submitted. Thank you very much!\");\n    }\n\n    render() {\n        return (        \n            <section className=\"page-section\" id=\"contact\">\n                <div className=\"container\">\n                    <div className=\"text-center\">\n                        <h2 className=\"section-heading text-uppercase\">Contact Us</h2>\n                        <h3 className=\"section-subheading text-muted\">Lorem ipsum dolor sit amet consectetur.</h3>\n                    </div>\n                    <div className=\"row>\">\n                        <div className=\"col-lg-12\">\n                            <form onSubmit={e => this.submitForm(e)} id=\"contactForm\" data-sb-form-api-token=\"API_TOKEN\">\n                                <div className=\"row align-items-stretch mb-5\">\n                                    {fields.sections.map((section, sectionIndex) => {\n                                        console.log(\"Rendering section \", sectionIndex, \" with \", section);\n                                        return (\n                                            <div className=\"col-md-6\" key={sectionIndex}>\n                                                {section.map((field, i) => {\n                                                    return <Field \n                                                        {...field} \n                                                        key={i} \n                                                        value={this.state[field.name]}\n                                                        onChange={e => this.setState({\n                                                            [field.name]: e.target.value\n                                                        })}\n                                                        />\n                                                })}\n                                            </div>\n                                        )\n                                    })}\n                                    <div className=\"clearfix\"></div>\n                                    <div className=\"col-lg-12 text-center\">\n                                        <div id=\"success\"></div>\n                                        <button\n                                            id=\"sendMessageButton\"\n                                            className=\"btn btn-primary btn-xl text-uppercase\"\n                                            type=\"submit\"\n                                        >Send Message</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default withFormik({\n    mapPropsToValues: () => ({\n        name: '',\n        email: '',\n        phone: '',\n        message: ''\n    }),\n    validate: values => {\n        const errors = {};\n\n        Object.keys(values).map(v => {\n            if(!values[v]){\n                errors[v] = 'Required';\n            }\n        })\n\n        return errors;\n    },\n    handleSubmit: (values, {setSubmitting}) => {\n        alert(\"You've Submitted the form\");\n    }\n\n})(Contact);"]},"metadata":{},"sourceType":"module"}