{"ast":null,"code":"var _jsxFileName = \"/home/christian/Desktop/Projects/website/src/components/Pages/Contact.js\";\nimport React, { Component } from 'react';\nimport Field from '../common/Field';\nimport { withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst fields = {\n  sections: [[{\n    name: 'name',\n    elementName: 'input',\n    type: 'text',\n    id: 'name',\n    placeholder: 'Your name*'\n  }, {\n    name: 'email',\n    elementName: 'input',\n    type: 'email',\n    id: 'name',\n    placeholder: 'Your email*'\n  }, {\n    name: 'phone',\n    elementName: 'input',\n    type: 'text',\n    id: 'name',\n    placeholder: 'Your phone number*'\n  }], [{\n    name: 'message',\n    elementName: 'textarea',\n    type: 'text',\n    id: 'name',\n    placeholder: 'Type your message*'\n  }]]\n};\n\nclass Contact extends Component {\n  /*submitForm = (e) => {\n      alert(\"Form Submitted. Thank you very much!\");\n  }*/\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"page-section\",\n      id: \"contact\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-heading text-uppercase\",\n            children: \"Contact Us\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-subheading text-muted\",\n            children: \"Lorem ipsum dolor sit amet consectetur.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row>\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: this.props.handleSubmit,\n              id: \"contactForm\",\n              \"data-sb-form-api-token\": \"API_TOKEN\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row align-items-stretch mb-5\",\n                children: [fields.sections.map((section, sectionIndex) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-md-6\",\n                    children: section.map((field, i) => {\n                      return /*#__PURE__*/_createElement(Field, { ...field,\n                        key: i,\n                        value: this.props.values[field.name],\n                        name: field.name,\n                        onChange: this.props.handleChange,\n                        onBlur: this.props.handleBlur,\n                        touched: this.props.touched[field.name],\n                        errors: this.props.errors[field.names],\n                        __self: this,\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 40,\n                          columnNumber: 60\n                        }\n                      });\n                    })\n                  }, sectionIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 38,\n                    columnNumber: 45\n                  }, this);\n                }), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"clearfix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-lg-12 text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    id: \"success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"sendMessageButton\",\n                    className: \"btn btn-primary btn-xl text-uppercase\",\n                    type: \"submit\",\n                    children: \"Send Message\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withFormik({\n  mapPropsToValues: () => ({\n    name: '',\n    email: '',\n    phone: '',\n    message: ''\n  }),\n  validationSchema: Yup.object().shape({\n    name: Yup.string().min(3, 'Common bro yer names longer than that').required('You must give us your name.'),\n    email: Yup.string().email('You need to give us a valid email').required('you must give us your email.'),\n    phone: Yup.min(10, 'Please provide your 10 digit phone number').max(15, 'Your phone number is too long').required('We need a phone number to reach you at.'),\n    message: Yup.min(500, 'You need to provide us with more information').required('Message is required.')\n  }),\n  handleSubmit: (values, {\n    setSubmitting\n  }) => {\n    console.log(\"VALUES\", values);\n    alert(\"You've Submitted the form\", JSON.stringify(values));\n  }\n})(Contact);","map":{"version":3,"sources":["/home/christian/Desktop/Projects/website/src/components/Pages/Contact.js"],"names":["React","Component","Field","withFormik","Yup","fields","sections","name","elementName","type","id","placeholder","Contact","render","props","handleSubmit","map","section","sectionIndex","field","i","values","handleChange","handleBlur","touched","errors","names","mapPropsToValues","email","phone","message","validationSchema","object","shape","string","min","required","max","setSubmitting","console","log","alert","JSON","stringify"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Field from '../common/Field'\nimport {withFormik} from 'formik';\nimport * as Yup from 'yup';\n\nconst fields = {\n    sections: [\n        [    \n            {name: 'name', elementName: 'input', type: 'text', id: 'name', placeholder: 'Your name*' },\n            {name: 'email', elementName: 'input', type: 'email', id: 'name', placeholder: 'Your email*' },\n            {name: 'phone', elementName: 'input', type: 'text', id: 'name', placeholder: 'Your phone number*' },\n        ],\n        [\n            {name: 'message', elementName: 'textarea', type: 'text', id: 'name', placeholder: 'Type your message*' }\n        ]\n    ]\n}\nclass Contact extends Component {\n    \n    /*submitForm = (e) => {\n        alert(\"Form Submitted. Thank you very much!\");\n    }*/\n\n    render() {\n        return (        \n            <section className=\"page-section\" id=\"contact\">\n                <div className=\"container\">\n                    <div className=\"text-center\">\n                        <h2 className=\"section-heading text-uppercase\">Contact Us</h2>\n                        <h3 className=\"section-subheading text-muted\">Lorem ipsum dolor sit amet consectetur.</h3>\n                    </div>\n                    <div className=\"row>\">\n                        <div className=\"col-lg-12\">\n                            <form onSubmit={this.props.handleSubmit} id=\"contactForm\" data-sb-form-api-token=\"API_TOKEN\">\n                                <div className=\"row align-items-stretch mb-5\">\n                                    {fields.sections.map((section, sectionIndex) => {\n                                        return (\n                                            <div className=\"col-md-6\" key={sectionIndex}>\n                                                {section.map((field, i) => {\n                                                    return <Field \n                                                        {...field} \n                                                        key={i}\n                                                        value={this.props.values[field.name]}\n                                                        name={field.name}\n                                                        onChange={this.props.handleChange} \n                                                        onBlur={this.props.handleBlur}\n                                                        touched={(this.props.touched[field.name])}\n                                                        errors={this.props.errors[field.names]}\n                                                        />\n                                                })}\n                                            </div>\n                                        )\n                                    })}\n                                    <div className=\"clearfix\"></div>\n                                    <div className=\"col-lg-12 text-center\">\n                                        <div id=\"success\"></div>\n                                        <button\n                                            id=\"sendMessageButton\"\n                                            className=\"btn btn-primary btn-xl text-uppercase\"\n                                            type=\"submit\"\n                                        >Send Message</button>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default withFormik({\n    mapPropsToValues: () => ({\n        name: '',\n        email: '',\n        phone: '',\n        message: ''\n    }),\n    validationSchema: Yup.object().shape({\n        name: Yup.string().min(3, 'Common bro yer names longer than that').required('You must give us your name.'),\n        email: Yup.string().email('You need to give us a valid email').required('you must give us your email.'),\n        phone: Yup.min(10, 'Please provide your 10 digit phone number').max(15, 'Your phone number is too long').required('We need a phone number to reach you at.'),\n        message: Yup.min(500, 'You need to provide us with more information').required('Message is required.')\n    }),\n\n    handleSubmit: (values, {setSubmitting}) => {\n        console.log(\"VALUES\", values)\n        alert(\"You've Submitted the form\", JSON.stringify(values));\n    }\n\n})(Contact);"]},"metadata":{},"sourceType":"module"}